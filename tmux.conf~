# ^F is easier to press
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# use good colors
set -g default-terminal xterm-256color

# a mouse
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
# set -g mouse-resize-pane on

# act like vim
setw -g mode-keys vi

# from <https://github.com/christoomey/vim-tmux-navigator>
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# restore overwritten C-l binding (clear screen)
bind C-l send-keys 'C-l'

# ease of use (prefer visual splits)
unbind %
unbind '"'
bind % split-window
bind '"' split-window -h

# 12 hour clock
set-window-option -g clock-mode-style 12

# Start numbering at 1 (easier to switch between a few screens)
set -g base-index 1
setw -g pane-base-index 1

# toggle status line
bind T set-option -g status

# put statusline on top
set-option -g status-position top

# tmuxline integration
if-shell "test -f ~/.tmuxline" "source ~/.tmuxline"

